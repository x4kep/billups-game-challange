name: Deploy server to ECR

on:
  push:
    branches: [main]
    paths:
      - "server/**"
      - ".github/workflows/deploy-api.yml"

concurrency:
  group: api-deploy
  cancel-in-progress: true

permissions:
  contents: read
  id-token: write

env:
  ECR_REGION: eu-north-1
  ECR_REGISTRY: 790277131841.dkr.ecr.eu-north-1.amazonaws.com
  ECR_REPOSITORY: myapp
  APP_RUNNER_REGION: us-east-1
  APP_RUNNER_SERVICE_ARN: arn:aws:apprunner:us-east-1:790277131841:service/billups-game-api/cf2113d8a0f6468bbb2c4641e988a34f

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials (ECR region)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.ECR_REGION }}

      - name: Who am I?
        run: aws sts get-caller-identity

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push API image
        id: build
        uses: docker/build-push-action@v6
        with:
          context: ./server
          file: ./server/Dockerfile
          push: true
          platforms: linux/amd64
          tags: |
            ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest
            ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
          cache-from: type=registry,ref=${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:buildcache
          cache-to: type=registry,ref=${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:buildcache,mode=max

      - name: Pull pushed image by digest and retag locally
        run: |
          set -e
          IMAGE="${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}"
          DIGEST="${{ steps.build.outputs.digest }}"
          docker pull "$IMAGE@$DIGEST"
          docker tag "$IMAGE@$DIGEST" billupsgame/api:${{ github.sha }}

      - name: Save image as tar.gz
        run: |
          docker save billupsgame/api:${{ github.sha }} | gzip > server-image-${{ github.sha }}.tar.gz
          ls -lh server-image-${{ github.sha }}.tar.gz

      - name: Export Docker Build record (.dockerbuild)
        run: |
          docker buildx version
          docker buildx history export -o api-build.dockerbuild || echo "Skipping build record export"

      - name: Create deploy metadata
        run: |
          BUILD_TIME="$(date -u +'%Y-%m-%dT%H:%M:%SZ')"
          cat > api-deploy-info.json <<EOF
          {
            "image": "${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest",
            "digest": "${{ steps.build.outputs.digest }}",
            "commit": "${{ github.sha }}",
            "repo": "${{ github.repository }}",
            "branch": "${{ github.ref_name }}",
            "buildTimeUTC": "${BUILD_TIME}",
            "ecrRegion": "${{ env.ECR_REGION }}",
            "appRunnerRegion": "${{ env.APP_RUNNER_REGION }}",
            "serviceArn": "${{ env.APP_RUNNER_SERVICE_ARN }}"
          }
          EOF

      # âœ… Upload the runnable image artifact
      - name: Upload image artifact
        uses: actions/upload-artifact@v4
        with:
          name: server-image-${{ github.sha }}
          path: server-image-${{ github.sha }}.tar.gz
          retention-days: 30

      # Optional: upload metadata + build record
      - name: Upload metadata artifacts
        uses: actions/upload-artifact@v4
        with:
          name: server-deploy-${{ github.sha }}
          path: |
            api-deploy-info.json
            api-build.dockerbuild
          retention-days: 30
          if-no-files-found: warn
