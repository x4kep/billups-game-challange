name: Deploy client to ECR

on:
  push:
    branches: [main]
    paths:
      - "client/**"
      - ".github/workflows/deploy-client.yml"

concurrency:
  group: client-deploy
  cancel-in-progress: true

permissions:
  contents: read
  id-token: write

env:
  AWS_REGION: eu-central-1
  ECR_REGISTRY: 790277131841.dkr.ecr.eu-central-1.amazonaws.com
  ECR_REPOSITORY: billupsgame/ui
  VITE_API_BASE: "https://3q3wybpmda.us-east-1.awsapprunner.com/api"

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Mask env
        run: echo "::add-mask::${{ env.VITE_API_BASE }}"

      - name: Who am I?
        run: aws sts get-caller-identity

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v6
        with:
          context: ./client
          file: ./client/Dockerfile
          push: true
          progress: plain 
          pull: true
          tags: |
            ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest
            ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
          build-args: |
            VITE_API_BASE=${{ env.VITE_API_BASE }}
          cache-from: type=registry,ref=${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:buildcache
          cache-to: type=registry,ref=${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:buildcache,mode=max

      - name: Export Docker Build record (.dockerbuild)
        run: |
          docker buildx version
          docker buildx history export -o client-build.dockerbuild || echo "Skipping build record export"

      - name: Create deploy metadata
        run: |
          BUILD_TIME="$(date -u +'%Y-%m-%dT%H:%M:%SZ')"
          cat > client-deploy-info.json <<EOF
          {
            "image": "${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest",
            "digest": "${{ steps.build.outputs.digest }}",
            "commit": "${{ github.sha }}",
            "repo": "${{ github.repository }}",
            "branch": "${{ github.ref_name }}",
            "buildTimeUTC": "${BUILD_TIME}",
            "region": "${{ env.AWS_REGION }}",
            "viteApiBase": "${{ env.VITE_API_BASE }}"
          }
          EOF
          cat client-deploy-info.json

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: client-deploy-${{ github.sha }}
          path: |
            client-deploy-info.json
            client-build.dockerbuild
          if-no-files-found: warn
          retention-days: 30
