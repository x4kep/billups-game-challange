name: Deploy client to ECR

on:
  push:
    branches: [main]
    paths:
      - "client/**"
      - ".github/workflows/deploy-client.yml"

concurrency:
  group: client-deploy
  cancel-in-progress: true

permissions:
  contents: read
  id-token: write

env:
  AWS_REGION: eu-central-1
  ECR_REGISTRY: 790277131841.dkr.ecr.eu-central-1.amazonaws.com
  ECR_REPOSITORY: billupsgame/ui
  VITE_API_BASE: https://3q3wybpmda.us-east-1.awsapprunner.com/api

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # If you prefer OIDC, swap this step for a role-to-assume version later.
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Who am I?
        run: aws sts get-caller-identity

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v6
        with:
          context: ./client
          file: ./client/Dockerfile
          push: true
          tags: |
            ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest
            ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
          build-args: |
            VITE_API_BASE=${{ env.VITE_API_BASE }}
          cache-from: type=registry,ref=${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:buildcache
          cache-to: type=registry,ref=${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:buildcache,mode=max

      - name: Output pushed image digest
        run: echo "Digest ${{ steps.build.outputs.digest }}"
